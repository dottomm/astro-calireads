---
import SGQWalkthrough from '/sgqresources/Self-Generated-Questions-digiCOACH-Edition.pdf';

//import ARGImg from '../images/gettyImages/GettyImages-121518480075.jpg';
import ARGImg from '../images/ARG-module_500.jpg';
import ARGSmall from '../images/gettyImages/ARGSmall.jpg';
import GTGIMg from '../images/GTG_500.png';
import GTGsm from '../images/gettyImages/GTGsm.jpg';
import MorphImg from '../images/MorphImg_500.png';
import MorphSmall from '../images/gettyImages/MorphSmall.jpg';
import RecipTechImg from '../images/reciprocalTeaching.png';
import RTSmall from '../images/gettyImages/reciprocalTeachingSmall.jpg';
import sgqImg from '../images/gettyImages/sgq-overview.jpg';
import SGQSmall from '../images/gettyImages/sgq-overview-small.jpg';
import vocabImg from '../images/VocabMaps_500.png';
import vocabSmall from '../images/gettyImages/vocabImgSmall.jpg';
import WBImg from '../images/wordBuilder_500.png';
import WBSmall from '../images/gettyImages/wordBuilder-small.jpg';

import wbVideo from '../data/wbVideo.json';

import WordParts from './WordParts.astro';
import Button from './Button.astro';
import Card from './Card.astro';
import MediaButton from './MediaButton.astro';

export interface Props {

title: string;
body: string;
url: string;
name?:string;
altText?:string;
}
const { title, body, url} = Astro.props as Props;

//ARG Modules Data
import ARGData from '../data/ARGModuleData.json';
import ARGResources from '../data/ARGResourceData.json';
//Get The Gist Data
import GTGData from '../data/GTGModuleData.json';
import GTGResources from '../data/GTGResourceData.json';
//Morphology
import MorphData from '../data/MorphologyModuleData.json';
import MorphResources from '../data/MorphologyResourceData.json';
//Reciprocal Teaching
import RTData from '../data/ReciprocalTeachingModuleData.json';
import RTResources from '../data/ReciprocalTeachingResourceData.json';
import RTOverview from '../data/ReciprocalTeachingOverviewData.json';
import RTSummary from '../data/ReciprocalTeachingSummarizingData.json';
import RTQuestioning from '../data/ReciprocalTeachingQuestioningData.json';
import RTPredicting from '../data/ReciprocalTeachingPredictingData.json';
import RTClarifying from '../data/ReciprocalTeachingClarifyingData.json';
//Self-Generated Questions
import sgqData from '../data/SGQModuleData.json';
import sgqResources from '../data/SGQResourceData.json';
//Vocabulary Maps
import vocabData from '../data/VocabMapsModuleData.json';
import vocabResources from '../data/VocabMapsResourceData.json';
//WordBuilder
import wbData from '../data/WordBuilderModuleData.json';
import wbResources from '../data/WordBuilderResourceData.json';

import { Icon } from 'astro-icon'
---

<section class="ARGuides" id="ARGuides">
  <div class="module-wrapper">
    <header class="mod-header">
      <h2>Anticipation Reaction Guides Modules</h2>
    </header>
    <article class="main">
           {ARGData.map(ARG => (
            <h3>{ARG.title}  </h3>
        <div>
            <p>{ARG.body} </p>
        </div>
      ))}
    </article>
    <aside class='aside aside-2'>
      {ARGData.map(ARG => (
          
            <a href={ARG.url}>
             <Button addText={"Launch: "} buttonText={ARG.title}/>
          
          </a>
   
  ))}
      
  </aside>
    <aside class="aside aside-1"> 
      <div class='imgHolder'> 
        <img class='logos' src={ARGImg} alt="">
        <img class='logos-small' src={ARGSmall} alt="">
    </div>
  </aside>
    <footer class="footer">
      <h3 >Anticipation Reaction Guides Module Resources</h3>
          <ul class="column-list"> 
            {ARGResources.map(ARGResource => (
            
              <li><a href={ARGResource.url}>{ARGResource.title}</a> 
                <Icon name={ARGResource.name} alt={ARGResource.altText} title={ARGResource.altText} /></li>
            ))}
          </ul>
    </footer>
  </div>
  </section>

  <section class="GTG" id="GTG">
    <div class="module-wrapper">
      <header class="mod-header">
        <h2>Get The Gist Modules</h2>
        </header>
        <article class="main">
          
      {GTGData.map(GTG => (
        <a href={GTG.url}><h3>{GTG.title}</h3></a>
       <p>{GTG.body} </p>
      
      ))} 
      </article>
      <aside class="main"> 
        <div class='imgHolder'>
          <img class='logos' src={GTGIMg} alt="">
          <img class='logos-small' src={GTGsm} alt="">
        </div>
     
    </aside>
    <aside class='aside aside-2'>
          
      {GTGData.map(GTG => (
        <a href={GTG.url}>
          <Button addText={"Launch: "}buttonText={GTG.title} />
          </a>
      
          ))} 
    </aside>

    <footer class="footer">
        <h3 >Get The Gist Module Resources</h3>
            <ul class="column-list"> 
              {GTGResources.map(GTGResources => (
                <li><a href={GTGResources.url}>{GTGResources.title}</a> 
                <Icon name={GTGResources.name} alt={GTGResources.altText} title={GTGResources.altText} /></li>
              ))}
            </ul>
      </footer>
    </div>
  </section>

  <section class="morphology" id="morphology">
    <div class="module-wrapper">
      <header class='mod-header'>
        <h2>Morphology Modules</h2>
      </header>
      <article class="main">
        {MorphData.map(morph => (
        <a href={morph.url}><h3>{morph.title}</h3></a>
        <p>{morph.body} </p>
        ))}
      </article>
      <aside class="aside aside 1">
        <div class='imgHolder'>
          <img class='logos' src={MorphImg} alt="">
          <img class='logos-small' src={MorphSmall} alt="">
        </div>
      </aside>
      <aside class='aside aside-2'>
        {MorphData.map(morph => (
          <a href={morph.url}>
            <Button addText={"Launch: "} buttonText={morph.title} />
          </a>
          
          ))}
      </aside>
    <footer class='footer'>
        <h3> Morphology Module Resources</h3>
        <ul class="column-list">
          {MorphResources.map(MorphResource =>(
            <li><a href={MorphResource.url}>{MorphResource.title}</a>
              <Icon name={MorphResource.name} alt={MorphResource.altText} title={MorphResource.altText} /> </li>
          ))}
         </ul>
      </footer>
    </div>
  </section>
  
  <section class="ReciprocalTeaching" id="ReciprocalTeaching">
    <div class="module-wrapper">
      <header class='mod-header'>
        <h2>Reciprocal Teaching Modules</h2>
      </header>
      <aside class='aside aside-1'>
       <div class='imgHolder'> 
          <img class='logos' src={RecipTechImg} alt="">
          <img class='logos-small' src={RTSmall} alt="">
        </div>
        </aside>
        <article class="main">
          {RTData.map(rt => (
            <a href={rt.url}><h3>{rt.title}</h3></a>
          <p>{rt.body} </p>
          
          ))}
        </article>
        <aside class='aside aside-2'>
          {RTData.map(rt => (
            <a href={rt.url}>
              <Button addText={"Launch: "} buttonText={rt.title} />
                </a>
          
          
          ))}
        </aside>
      <footer class='footer'>
        <h3>Reciprocal Teaching Module Resources</h3>
        <div class="tabs">
    
          <div class="tab">
              <input type="radio" id="tab-1" name="tab-group-1" checked>
              <label for="tab-1">General Resources</label>
              
              <div class="content">
                <ul class="column-list">
                  {RTOverview.map(RTOverview =>(
                    <li><a href={RTOverview.url}>{RTOverview.title}</a>
                      <Icon name={RTOverview.name}  alt={RTOverview.altText} title={RTOverview.altText} /></li>
                  ))}
                 </ul>
              </div> 
          </div>
           
          <div class="tab">
              <input type="radio" id="tab-2" name="tab-group-1">
              <label for="tab-2">Summarizing</label>
              
              <div class="content">
                <ul class="column-list">
                  {RTSummary.map(RTSummary =>(
                    <li><a href={RTSummary.url}>{RTSummary.title}</a>
                      <Icon name={RTSummary.name}  alt={RTSummary.altText} title={RTSummary.altText} /></li>
                  ))}
                 </ul>
              </div> 
          </div>
           
           <div class="tab">
              <input type="radio" id="tab-3" name="tab-group-1">
              <label for="tab-3">Questioning</label>
            
              <div class="content">
                <ul class="column-list">
                  {RTQuestioning.map(RTQuestioning =>(
                    <li><a href={RTQuestioning.url}>{RTQuestioning.title}</a>
                      <Icon name={RTQuestioning.name} alt={RTQuestioning.altText} title={RTQuestioning.altText} /></li>
                  ))}
                 </ul>
              </div> 
          </div>
       
       
          <div class="tab">
              <input type="radio" id="tab-4" name="tab-group-1">
              <label for="tab-4">Predicting</label>
            
              <div class="content">
                <ul class="column-list">
                  {RTPredicting.map(RTPredicting =>(
                    <li><a href={RTPredicting.url}>{RTPredicting.title}</a>
                      <Icon name={RTPredicting.name} alt={RTPredicting.altText} title={RTPredicting.altText} /></li>
                  ))}
                 </ul>
              </div> 
          </div>
       
            <div class="tab">
              <input type="radio" id="tab-5" name="tab-group-1">
              <label for="tab-5">Clarifying</label>
            
              <div class="content">
                <ul class="column-list">
                  {RTClarifying.map(RTClarifying =>(
                    <li><a href={RTClarifying.url}>{RTClarifying.title}</a>
                      <Icon name={RTClarifying.name} alt={RTClarifying.altText} title={RTClarifying.altText} /></li>
                  ))}
                 </ul>              
                </div> 
          </div>
       </div> 
      </footer>
      </div>
  </section>

<section class="SGQmodules" id="SGQmodules">
    <div class="module-wrapper">
      <header class='mod-header'>
        <h2>Self-Generated Questions Modules</h2>
      </header>
<aside class='aside aside-1'>
  <div class='imgHolder'> 
    <img class='logos' src={sgqImg} alt="">
    <img class='logos-small' src={SGQSmall} alt="">
  </div>
  </aside>
  <article class='main'>
      {sgqData.map(SGQ => (
        <a href={SGQ.url}><h3>{SGQ.title}</h3></a>
       <p>{SGQ.body} </p>
      ))}
      </article>
      <aside class='aside aside-2'>
        {sgqData.map(SGQ => (
          <a href={SGQ.url}>
            <Button addText={"Launch: "} buttonText={SGQ.title} />
            </a>
        ))}
      </aside>
      <footer class='footer'>
      <h3>Self-Generated Questions Module Resources</h3>
        <ul class="column-list">
          {sgqResources.map(sgqResource=>(
            <li><a href={sgqResource.url}>{sgqResource.title}</a>
              <Icon name={sgqResource.name} alt={sgqResource.altText} title={sgqResource.altText} /></li>
          ))}
        </ul>
      </footer>
     </div>
  </section>
  
  <section class="vocabModules" id="vocabModules">
    <div class="module-wrapper">
      <header class='mod-header'>        
        <h2>Vocabulary Maps Modules</h2>
      </header>
      <aside class='aside aside-1'>
      <div class='imgHolder'>
        <img class='logos' src={vocabImg} alt="">
        <img class='logos-small' src={vocabSmall} alt="">
      </div>
    </aside>
    <article class='main'>
      {vocabData.map(vocab => (
       <div class='module'> <a href={vocab.url}><h3>{vocab.title}</h3></a>
        <p>{vocab.body} </p>
       </div>
      ))}
      </article>
      <aside class='aside aside-2'>
        {vocabData.map(vocab => (
         <a href={vocab.url}>
          <Button addText={"Launch: "} buttonText={vocab.title} />
          </a>
          
         ))}
      </aside>
      
      <footer  class='footer'>
        <h3 >Vocabulary Maps Module Resources</h3>
        <ul class="column-list">
          {vocabResources.map(vocabResource=>(
            <li><a href={vocabResource.url}>{vocabResource.title}</a>
              <Icon name={vocabResource.name} alt={vocabResource.altText} title={vocabResource.altText} /></li>
          ))}
        </ul>
        </footer>
      </div>
  </section>

  <section class="wordbuilder" id="wordbuilder">
  
    <div class="module-wrapper">
      <header class='mod-header'>
        <h2>Wordbuilder Modules</h2>
      </header>
      <aside class='aside aside-1'>
        <div class="imgHolder">
          <img class='logos' src={WBImg} alt="">
          <img class='logos-small' src={WBSmall} alt="">
        </div>
      </aside>
      <aside  class='aside aside-2'>
         
         
        {wbData.map(wordbuilder => (
          <a href={wordbuilder.url}>
            <Button addText={"Launch: "} buttonText={wordbuilder.title} />
            </a>
        
        ))}
          <MediaButton url="https://vimeo.com/showcase/9843748"  title="Watch: WordBuilder Demonstration Videos"   />
          
          <MediaButton url='https://vimeo.com/showcase/calireadswebinars' title="Watch: WordBuilder Training Webinars"  />
      </aside>
      <article class='main'>
        {wbData.map(wordbuilder => (
          <a href={wordbuilder.url}><h3>{wordbuilder.title}</h3></a>
          <p>{wordbuilder.body} </p>
        ))}
      </article>
     <footer class='footer'>
      <WordParts />
      <h3>Wordbuilder Module Resources</h3>
        <ul class="column-list">
            {wbResources.map(wbResource =>(
              <li><a href={wbResource.url}>{wbResource.title}</a>
                <Icon name={wbResource.name} alt={wbResource.altText} title={wbResource.altText} /></li>
            ))}
        </ul>
    </footer>
    </div>
  </section>
  <style>
   
  
.moduleButton {
  
  color: #fff;
  
  
}

.moduleButton a:hover{
background-color: #666;
}

  

    .column-list {
  columns: 400px;
  text-align: left;
}
.column-list li a:link{
  justify-content: baseline;
  text-decoration: underline;


}

.column-list li a:hover{
color:var(--color-accent);
}

.module-wrapper {
  
  display: flex;  
  flex-flow: row wrap;
  font-weight: bold;
  text-align: center; 
}

.module-wrapper > * {
  padding: 10px;
  flex: 1 100%;
}

.mod-header {
/*
  background: tomato;
*/
}

.footer {
  background: #fff;


}

.main {
  text-align: left;
  max-width: 650px;
}

.aside-1 {
}

.aside-2 {
  text-align: left;
}

.tabs {
  position: relative;   
  min-height: 300px; /* This part sucks */
  clear: both;
  margin: 25px 0;
}
.tab {
  float: left;
}
.tab label {
  background: #eee; 
  padding: 10px; 
  border: 1px solid #ccc; 
  margin-left: -1px; 
  position: relative;
  left: 1px; 
}
.tab [type=radio] {
  display: none;   
}
.content {
  position: absolute;
  top: 28px;
  left: 0;
  background: white;
  right: 0;
  bottom: 0;
  padding: 10px;
  border: 1px solid #ccc; 
}
[type=radio]:checked ~ label {
  background: white;
  border-bottom: 1px solid white;
  z-index: 2;
}
[type=radio]:checked ~ label ~ .content {
  z-index: 1;
}

[astro-icon] {
        color: #666;
        /* OR */
        width:22px;
        padding-top: 12px;
    }

@media all and (min-width: 600px) {
  .aside { flex: 1 0 0; }
}

@media all and (min-width: 800px) {
  .main    { flex: 3 0px; }
  .aside-1 { order: 1; } 
  .main    { order: 2; }
  .aside-2 { order: 3; }
  .footer  { order: 4; }
  
}

@media (max-width: 1100px) {
.tabs{
  max-width: 600px;
  overflow: hidden;
}
}



  </style>
      
      
  